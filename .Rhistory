library(readr)
overlap_pcts <- read_csv("~/Documents/Projects/fish/analysis/misc/train_overlap_percentages.csv",
col_names = FALSE)
View(overlap_pcts)
overlap_pcts
overlap_pcts==0
overlap_pcts>0
sum(overlap_pcts>0)
overlap_pcts[overlap_pcts>0]
overlap_pcts[,overlap_pcts>0]
overlap_pcts[overlap_pcts>0,]
len(overlap_pcts[overlap_pcts>0,])
length(overlap_pcts[overlap_pcts>0,])
nrow(overlap_pcts[overlap_pcts>0,])
sum(overlap_pcts>0)
coverage <- overlap_pcts[overlap_pcts>0,]
hist(coverage)
hist(coverage[,])
hist(coverage[,0])
typeof(coverage)
as.array(coverage)
coverage[0]
coverage[1]
as.arrat(coverage[1])
as.array(coverage[1])
as.matrix(coverage[1])
as.matrix(coverage)
coverage <- as.matrix(overlap_pcts[overlap_pcts>0,])
coverage
hist(coverage)
overlap_pcts <- read_csv("~/Documents/Projects/fish/analysis/misc/train_overlap_percentages.csv",
col_names = FALSE)
coverage <- as.matrix(overlap_pcts[overlap_pcts>0,])
hist(coverage)
overlap_pcts <- read_csv("~/Documents/Projects/fish/analysis/misc/train_overlap_percentages.csv",
col_names = FALSE)
coverage <- as.matrix(overlap_pcts[overlap_pcts>0,])
hist(coverage)
overlap_pcts[overlap_pcts<.001,]
sum(overlap_pcts[overlap_pcts<.001,])
sum(overlap_pcts<.001)
length(overlap_pcts<.001)
length(overlap_pcts==0)
sum(overlap_pcts==0)
26/746244
length(overlap_pcts)
as.matrix(overlap_pcts)
nrow(as.matrix(overlap_pcts))
nrow(coverage)
52325/746244
hist(coverage)
?hist
hist(coverage,breaks=20)
hist(coverage,breaks=40)
hist(coverage,breaks=50)
hist(coverage,breaks=100)
hist(coverage,breaks=10)
length(coverage)
coverage[coverage==1]
length(coverage)
length(coverage[coverage==1])
length(coverage[coverage<>1])
length(coverage[coverage!=1])
length(coverage[coverage>.9])
length(coverage[coverage<=.9])
length(coverage[coverage>.8])
library(readr)
dataset <- read_csv("~/Documents/Projects/fish/analysis/fish_count/lens.csv",
col_names = FALSE)
View(dataset)
counts <- dataset
counts
hist(counts)
hist(as.matrix(counts))
table(counts)
plot(table(counts))
len(counts)
length(counts)
nrow <- as.matrix(counts)
nrow
nrow(as.matrix(counts))
View(nrow)
nrow(as.matrix(counts[counts>1]))
counts>1
counts[counts>1]
counts
counts$X1[counts$X1>1]
counts$X1[counts$X1>1]-1
counts$X1[counts$X1>1]
counts$X1[counts$X1>1]-1
sum(counts$X1[counts$X1>1]-1)
sum(counts$X1)
sum(counts$X1[counts$X1>1]-1)/sum(counts$X1)
counts$X1[counts>1]-1
counts$X1>1]
counts$X1>1
counts$X1[counts>1]
nrow(counts$X1[counts>1])
length(counts$X1[counts>1])
length(counts$X1)
length(counts)
num_imgs <- length(counts$X1)
imgs_with_multiple_fish <- length(counts$X1[counts>1])
imgs_with_multiple_fish / num_imgs
num_fish <- sum(counts$X1)
extra_fish(counts$X1[counts > 1] - 1)
extra_fish <- sum(counts$X1[counts > 1] - 1)
extra_fish / num_fish
sum(counts$X1[counts$X1>1])
extra_fish <- sum(counts$X1[counts > 1])
extra_fish / num_fish
library(readr)
dataset <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_more_feats.csv",
col_names = FALSE)
View(dataset)
library(readr)
test <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_more_feats.csv",
col_names = FALSE)
response <- test$X1
predictor <- test$X2
response
predictor
predictor[response==0]
log(1)
?log
log(predictor[response==0])
-log(predictor[response==0])
-log(predictor[response==1])
-log(1-predictor[response==])
-log(1-predictor[response==0])
c(-log(1-predictor[response==0]),-log(predictor[response==1]))
length(c(-log(1-predictor[response==0]),-log(predictor[response==1])))
length(response)
losses <- c(-log(1-predictor[response==0]),-log(predictor[response==1]))
hist(losses)
table(losses)
hist(losses[losses<2])
hist(losses[losses<1])
hist(losses[losses<.8])
?hist
hist(losses[losses<.8],breaks=20)
hist(losses[losses<.8],breaks=50)
hist(losses[losses<.8],breaks=100)
coverage
coverage[coverage>0]
length(coverage[coverage>0])
mean(coverage[coverage>0])
sum(coverage[coverage>0])/length(coverage[coverage>0])
library(readr)
dataset <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_sgd_64.csv",
col_names = FALSE)
View(dataset)
sgd_64 <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_sgd_64.csv",
col_names = FALSE)
adam_64 <- read_csv("~/Documents/Projects/fish/analysis/training/adam_64.csv",
col_names = FALSE)
adam_128 <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_adam_128.csv",
col_names = FALSE)
adam_64 <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_adam_64.csv",
col_names = FALSE)
plot(adam_128)
plot(as.matrix(adam_128))
plot(as.matrix(adam_64))
plot(as.matrix(sgd_64))
length(adam_128)
length(adam_128$X1)
length(adam_64$X1)
length(sgd_64$X1)
as.matrix(sgd_64)[0:310]
plot(as.matrix(adam_128))
plot(as.matrix(adam_64)[0:310])
plot(as.matrix(sgd_64)[0:310])
min(adam_128)
min(adam_64)
min(sgd_64)
adam_128[adam_128==min(adam_128)]
adam_128$X1[adam_128==min(adam_128)]
which(adam_128==min(adam_128))
length(adam_128)
length(adam_128$X1)
adam_128$X1[0]
adam_128$X1[1]
get_best <- function(losses){
losses$X1[losses==min(losses)]
}
get_best(sgd_64)
which[losses==min(losses)]
which(losses==min(losses))
get_best <- function(losses){
which(losses==min(losses))
}
get_best(sgd_64)
get_best(adam_64)
get_best(adam_128)
get_best <- function(losses){
which(losses==min(losses)) - 1
}
get_best(adam_128)
get_best(sgd_64)
adam_64 <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_adam_64.csv",
col_names = FALSE)
adam_64
sum(adam_64$X1)
adam_128 <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_adam_128.csv",
col_names = FALSE)
sgd_64 <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_sgd_64.csv",
col_names = FALSE)
sgd_64
library(pROC)
roc_curve <- function(thresh_data){
response <- thresh_data$X1
predictor <- thresh_data$X2
roc_curve <- roc(response,predictor)
plot(roc_curve)
}
roc_curve(adam_64)
roc_curve(adam_128)
roc_curve(sgd_64)
library(SDMTools)
optim.thresh(adam_64)
?optim.thresh
optim.thresh(adam_64$X1,adam_64$X2)
tpr <- function(thresh_data,k){
response <- thresh_data$X1
predictor <- thresh_data$X2
tp <- as.integer(predictor[response==1]>k)
return(sum(tp)/length(tp))
}
tpr(adam_64,.12)
fnr <- function(thresh_data,k){
response <- thresh_data$X1
predictor <- thresh_data$X2
fn <- as.integer(predictor[response==1]<=k)
return(sum(fn)/length(fn))
}
fnr(adam_64,.12)
fnr(adam_64,.13)
optim.thresh(adam_128$X1,adam_128$X2)
fnr(adam_128,.47)
fnr(adam_64,.13)
more_feats <- read_csv("~/Documents/Projects/fish/analysis/threshold/detect_batch_more_feats.csv",
col_names = FALSE)
optim.thresh(more_feats$X1,more_feats$X2)
fnr(more_feats,.52)
roc_curve(more_feats)
tpr(more_feats,.52)
tpr(adam_64,.13)
tpr(more_feats,.52)
tpr(adam_64,.13)
get_best(adam_128)
adam <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_adam.csv", col_names = FALSE)
library(readr)
adam <- read_csv("~/Documents/Projects/fish/analysis/training/detect_batch_adam.csv", col_names = FALSE)
View(adam)
plot(adam)
plot(adam)
plot(adam$X1)
View(adam)
adam$X1[1]
adam$X1[1:2]
adam$X1[2:2]
adam$X1[2:]
adam$X1[2:-1]
adam$X1[2:length(adam$X1)]
adam <- adam$X1[2:length(adam$X1)]
plot(adam)
get_best <- function(losses){
which(losses==min(losses)) - 1
}
get_best(adam)
min(adam)
